<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAABoBJREFUeF7t
        m+lvVFUUwPk/RI3/gJ9pKV0Aq4IIiRIhQdQP+kXFSGdpyyJVI0gpSkQTLBRDFMUIjUYR7aasLaV7y3Qb
        A4UuQ7Ebyyxdjue83qHOzHlz37vvTadt+kt+yczknnPPeX0z8+a+2yWLLMIDAC+gV9EgOp+ZQFvQjaI1
        OTiYml9oTKEvixbjgwNrtZCFR6NoMT44cGx6/ILDL1qMDw6k975tDISG4dzINTg08DM4eo7Cq95CWN9Z
        ANntOzTpMb3m7DmmjfljpA58GJMA6kSL8cGBa6fHq9MfGoITg+Ww1XsAVnpylXzNW4Q5KrRcNkAfhutE
        i3Jw8Bq0BjX1LeAN9MPevlOw2pPPNqXiKk8e5N/6Btr9t8QspgigV9DnRWtqYIKl6FmUZWj8ntY4Fcs1
        YZcFt7/T5tLhV/QxUbL9YPLHtWmiqBhthBc797AFJ0L6zKgabRKzR7BUlJoYcIKIAzA+NQFF/afZImfD
        z/pLtRr+R+IOACan5n/XpkH8k0Fw95Swhc2mOTeL4cEkvc016C2qdhAwkK7+6EPvUTY9aMK3b3zJFpQM
        37nxFTzEP4hBqL9qdK1oXWt+AzqJSqFTbi785aOlMyE0NS6qNAT1uz58AOq1lwyQzPe8TPpMMEl9+ABI
        T3uiaqyJndiM9H0+OD4qMs5wZ3wEcnuOszFmLB9tEBkNMX1pjA+ap5/rQ9+9dnzVUaN63AmNsDFmXNex
        B+6OG/4pM/3jCB9sROnnoi6f9J5iJzSrDC7GrPv6fhTZ4kL9vqQdAAKf0EGghYOYT5JOf69tV3gyuBiz
        Uq3dgT6RMQbqj874meZlrPLk/sRNpKIMLkbFD2+fFBk11C+Rs9t3PoUJJ6MnUFUGF6MinQX0M1ygfoWI
        yT6ITm5FGVyMqt/erRRZrR2AjujEVpTBxaj6uvegyKp4iby6zf0El9iKMrgYK0atLJlbIV7ZnvcGl9SK
        MrgYK9LyGoOxFeIsT95hLqkVZXAxVjw88IvIHIN8hTjrem7ZyuuYSGJ+D395myjoilG7bGZqidZ9s0RE
        xSBfIc5qy/WiIJMKmm18OCdXS7RbugpFRAzyFeKs1rx/s1oxkcRkwdUS7QbPR2J0BMZWiLNa3EEUZCYL
        rpZos1t3iNEa5laIM5rdwcxmN8hMFlwtjAHRTnwwX8yS2LrWAshswiQSkwVXC+OgaFEfzMUuiW2+/ilk
        NmISicn6EORqYewSbeqD+dglse3dxZDR4Jbq8pbM6kGg5p3eY2wt0abXu8+JNvXBnOyS2Oe3SiGj3mWr
        MrgYix4SbeqD87JLYmfv1kJ6nctWZXAxlqx3bhVt6oPzsktiA8FhSL+GSWxUBhdjxcxql7FfgTg3uyS2
        paUQ0msxmU3K4GKUveZuE+2ZA+t4dCf4eG8ZrLjqsk0ZXIyytc580ZJ5sBbtRmh/YAgyajBZjdMWZXAx
        ik6kXsp5UrRjHqzl0Z3gnZ0nIK3aaYsyuBg1Xd+LVsyDdUTcCe683wsrrrgg7QomtqgMLkbBqRXVjqdF
        O8bAuTehrWjEDfcwH3f9AGmXMblFZXAxZt3brXtjhF8SwxdeQePeGRoK3YPnanbD8ktOS/qC+leMvsAw
        G2NGqnE4dF9k1CVySQyf0FGRUjnYBMsvOiyZ03aUPQjU/Pa2YjbGjH/eMXyje2ZJDJ8YujtMFHadhuUX
        cLI5aFH3GVGlIWaWxPCJ4cNGGyS2txRD6nnHnHJb8xEIRe4XkjGzJIZP1qOGdogQDycC8GbDF5D6N04+
        B3wLa6GaTBC7JIYv0MZIWi4ylOnhRBDeby6GlL8cSfXdpiPwwHjzNFBt0yQGxWyUDE1OwP6O05BShcUk
        wQOdZ6K3yYVJzIZJTBqxTzBMma8Bss/vhJTKnFnx2Qu7oMLXKGZnUb8ZGg9MzB4AYjT0AA52lEJqpQOW
        VeQkxJQKBxS0nYShoO5W2TD2HwBMGnF5rEf3vT4oaD0JqRVOWFaOhdtgKjae03gMPGOGN0urb5gMgwkM
        b5zk6PcPQck/ZbDp8n5YVoaNKLgZY49jjgG/8v8O0O5J+t+HmU2RRsAAwxsnjUAN/NZXCwc8pbCt7ghs
        vLgPnqnaBWnl+AMLpcf02nt1X0NRe6k21ue3fZF1jWhPDg42fGE0j6gR7cnBwUqn/RxnTLQnBwdLN07O
        Q0ydAdKNk/MM6sXc1R8G6G6cnEfQtwBtjbf2/0KLLLJQWbLkP5rQfcFrqk+tAAAAAElFTkSuQmCC
</value>
  </data>
</root>