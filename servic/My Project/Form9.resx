<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAANRSURBVGhD7Vk7bxNBELZ4FZQ8pPjOyR+gRCD4EZQoEdQgCqhBVK6AHiIwt7aU1oiHCESgu8P0
        0BBMg0RBEiFEEmobiI/5nLG4rOfsvWeC5E/6FMe3M/vN3t7s3Lg0wQQTZIBmc7/t1c+WvfpN21ePLU99
        Iv4k/mLicxvX+mNc50ypWt3H1rsH63VjmoTdsTxnjf4GMblq+fXbdsupsLviMLXUOE4rXiMRXU1UEnbL
        rnPfatWOsft8YbnqAk26qYnIghvEOZ4me5x8XztIEzihCXNh2VMPMBdPmw2sxdph21NL0oR5sOyql5iT
        p08HrEaR4v/RcU80m4dYRnKQs9y3TRTxcLOMZKCcfVFyXCydWZYTD7a3cJQcrA87LJybiVIs53nJ4W5w
        nmWZAacjGRkfUhW/Hpx791y8JhFjYSNdi2DXcmszLG88yIDKA9HRECGk+e1z8KfXC66134pjwry87Ae/
        e1vBs+9fghm/IY4RSWUHyxsDKrLIYHXIgcCB+AHGBTEQP0C8IJw1FI2sMhqoKmUHw8RWCAsC8P+Vj2+G
        xuI7aWycrVfx1WmWGQ2Uu5JxFC9pqwrod0JfeQBjrrZbO3yNpevcYJnRoFv1RDQewVFBZCaeSIv7iGVG
        gwa2dUMTSkFskVCIDSOp+G06yywzGjQwcaksBRFGOvF9rrPMaNCgVC8pCAIrrwPfpRQPdlhmNGhQqgCw
        5/VtAyAAk3NiDI0CSLyFpAc2DASWMgijLZToIZbEY9X17ZQuCKOHOH4aHZUqTc4JUxql0bgHmUmezywI
        X11nmdFA00k0Flh0KTHlPTzFMkdgu5hb0Y0lSsXcqFSp3wkUc9PmZfVX424eSlfBgchwOW2S5wdBxBQf
        2J66xfLGYw++0HQq/oLN8szQb/fJzoqnq+6yLHNUXqkjZLwXXuo3EvdNyXhOc1Y4bV+dZznJgF6l5LgY
        1u+xjBSg91By9nTYee58UWpVD7CKdECjtd9wlSfKgfXFzJq7A6DJW0xmom2T1cpLoGJvlibKPjv56kfq
        B9YU3DedJ3Z2iEjGDvI80ja7Lw44HbnsMKqdNK6gPIh9wuYCKrLQdELfBjU7XjxIIN7sUI6A+Pyhf41K
        4n5VuRd+Zp1ggv8epdJfyqc4CIbJuwEAAAAASUVORK5CYII=
</value>
  </data>
  <data name="PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAA1FJREFUaEPt
        WTtvE0EQtngVlDyk+M7JH6BEIPgRlCgR1CAKqEFUroAeIjC3tpTWiIcIRKC7w/TQEEyDREESIUQSahuI
        j/mcsbis5+y9Z4LkT/oUx7cz+83e3uzcuDTBBBNkgGZzv+3Vz5a9+k3bV48tT30i/iT+YuJzG9f6Y1zn
        TKla3cfWuwfrdWOahN2xPGeN/gYxuWr59dt2y6mwu+IwtdQ4TiteIxFdTVQSdsuuc99q1Y6x+3xhueoC
        TbqpiciCG8Q5niZ7nHxfO0gTOKEJc2HZUw8wF0+bDazF2mHbU0vShHmw7KqXmJOnTwesRpHi/9FxTzSb
        h1hGcpCz3LdNFPFws4xkoJx9UXJcLJ1ZlhMPtrdwlBysDzssnJuJUiznecnhbnCeZZkBpyMZGR9SFb8e
        nHv3XLwmEWNhI12LYNdyazMsbzzIgMoD0dEQIaT57XPwp9cLrrXfimPCvLzsB797W8Gz71+CGb8hjhFJ
        ZQfLGwMqsshgdciBwIH4AcYFMRA/QLwgnDUUjawyGqgqZQfDxFYICwLw/5WPb4bG4jtpbJytV/HVaZYZ
        DZS7knEUL2mrCuh3Ql95AGOutls7fI2l69xgmdGgW/VENB7BUUFkJp5Ii/uIZUaDBrZ1QxNKQWyRUIgN
        I6n4bTrLLDMaNDBxqSwFEUY68X2us8xo0KBULykIAiuvA9+lFA92WGY0aFCqALDn9W0DIACTc2IMjQJI
        vIWkBzYMBJYyCKMtlOghlsRj1fXtlC4Io4c4fhodlSpNzglTGqXRuAeZSZ7PLAhfXWeZ0UDTSTQWWHQp
        MeU9PMUyR2C7mFvRjSVKxdyoVKnfCRRz0+Zl9Vfjbh5KV8GByHA5bZLnB0HEFB/YnrrF8sZjD77QdCr+
        gs3yzNBv98nOiqer7rIsc1ReqSNkvBde6jcS903JeE5zVjhtX51nOcmAXqXkuBjW77GMFKD3UHL2dNh5
        7nxRalUPsIp0QKO133CVJ8qB9cXMmrsDoMlbTGaibZPVykugYm+WJso+O/nqR+oH1hTcN50ndnaISMYO
        8jzSNrsvDjgduewwqp00rqA8iH3C5gIqstB0Qt8GNTtePEgg3uxQjoD4/KF/jUriflW5F35mnWCC/x6l
        0l/KpzgIhsm7AQAAAABJRU5ErkJggg==
</value>
  </data>
</root>